@model DoctorAppointment.Model.UserModel

@{
    ViewBag.Title = "UpdateDoctorDetails";
    Layout = "~/Views/Shared/_DoctorLayout.cshtml";
}
<link href="~/CSS/UpdateDoctorDetails.css" rel="stylesheet" />
@if (TempData["UpdateMessage"] != null)
{
    <script>
        alert('@TempData["UpdateMessage"]');
    </script>
}

<div>
    <div class="container updateContainer mt-3">
        <h2 class="mb-3">Update Profile</h2>

        @using (Html.BeginForm("UpdateDoctorDetails", "Doctor", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="UserID" value=@Model.UserID>
            <div class="form-group">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter Name", required = "required", maxlength = "30" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Doctor.AppointmentSlotTime, "Appointment Slot Time")
                @{
                    // Convert TimeSpan to minutes
                    int[] slotTimesInMinutes = new int[] { 15, 30, 45, 60 };
                    string[] slotTimeTexts = new string[] { "15 minutes", "30 minutes", "45 minutes", "60 minutes" };

                    // Determine the total minutes of the selected slot time
                    int selectedTotalMinutes = (int)Model.Doctor.AppointmentSlotTime.TotalMinutes;
                }

                @Html.DropDownListFor(m => m.Doctor.AppointmentSlotTime, new SelectList(slotTimesInMinutes.Select((value, index) =>
                    new SelectListItem { Text = slotTimeTexts[index], Value = value.ToString() }), "Value", "Text", selectedTotalMinutes.ToString()),
                    "Select time slot", new { @class = "form-control", required = "required" })

                @Html.ValidationMessageFor(m => m.Doctor.AppointmentSlotTime, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Doctor.DayStartTime, "Day Start Time")
                @Html.TextBoxFor(m => m.Doctor.DayStartTime, new { @class = "form-control", type = "time", required = "required" })
                @Html.ValidationMessageFor(m => m.Doctor.DayStartTime, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Doctor.DayEndTime, "Day End Time")
                @Html.TextBoxFor(m => m.Doctor.DayEndTime, new { @class = "form-control", type = "time", required = "required" })
                @Html.ValidationMessageFor(m => m.Doctor.DayEndTime, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email", type = "email", maxlength = "30" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Enter Password", required = "required", maxlength = "30" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="~/Scripts/Register.js"></script>

